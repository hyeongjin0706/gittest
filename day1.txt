Git
버전관리 시스템의 종류

✔ 버전관리
여러 파일을 하나의 버전으로 묶어 관리하는 것

버전관리 시스템의 종류
1. 클라이언트 - 서버 모델
    - 하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 것만 가져와서 작업을 하고 다시 중앙 서버로 보내서 통합하는 방식
    - CVS, SVN

2. 분산 모델
    - 하나의 중앙 서버가 존재하지만, 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식
    - Git

Git의 장점
1. 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
2. 같은 파일을 여러명이 동시에 병렬 개발이 가능
3. 변동 과정을 체계적으로 관리할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
4. 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있고 중앙 서버의 데이터가 유실되어도 다시 복구할 수 있음

Git 설치
1. https://git-scm.com/downloads 접속
2. 왼쪽 메뉴에서 Downloads 클릭
3. 모니터에 있는 버전 클릭
4. 64-bit Git for Windows Setup. 클릭 후 다운로드 및 설치(기본설정 설치)

Git 명령어
1. 프로젝트 디렉토리 내에 로컬 저장소를 생성
    git init

2. git 버전 관리할 파일을 선택(stage에 올림)
    git add index.html

4. 하나의 버전으로 만들기
    git commit -m "index.html" 

5. 여러 파일을 함께 선택(stage에 현재 디렉토리에 있는 변화된 모든 파일을 선택)

    git add .

6. 선택된 여러 파일을 커밋
    - 로컬 시스템에서 파일 수정/생성/삭제하고 원격 저장소에 반영할 파일들을 선별하는 것(버전 만드는 것)
    - 로컬 저장소에 변경 사항을 저장하는데 사용
    - 파일이 변경될 때 변경 사항은 자동으로 저장되지 않음
    - Git에게 새 커밋을 생성하여 변경 사항을 저장하도록 지시
    git commit -m "현재 디렉토리에 있는 모든 파일을 커밋"

깃 허브(Git Hub)
- hhtps://github.com
- git으로 버전 관리한 코드를 업로드 할 수 있는 클라우드 서비스
- 단순히 저장만 하는 것이 아니라 유저들과 함께 코드를 공유하고 온라인으로 하나의 프로젝트를 개발할 수 있게 해줌

7. 깃허브 가입 후 repository 만들기
    Create repository 버튼을 클릭하여 생성

8. 로컬 저장소에서 github 저장소 주소를 설정
    git remote add origin https://github.com/hyeongjin0706/test.git

9. 생성한 커밋(버전들)들을 github로 전송(push)
    - 원격 저장소에 업로드하여 다른 사용자와 커밋을 공유하는 사용
    git push -u origin master
            ----
           업스트림

✔ 업스트림
- 원격 저장소와 로컬 브랜치가 추적하는 브랜치를 의미
- 기본적으로 origin/master 브랜치를 추적함

https://desktop.github.com/
